;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 01/11/2024 16:43:00
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF8D  	GOTO        282
_INTERRUPCAO_HIGH:
;Projeto_2.c,35 :: 		void INTERRUPCAO_HIGH() iv 0x0008 ics ICS_AUTO {
0x0008	0xF015C000  	MOVFF       R0, 21
;Projeto_2.c,44 :: 		if(INTCON.TMR0IF == 1)    //Foi o TIMER0 que gerou a interrupção ?
0x000C	0xA4F2      	BTFSS       INTCON, 2 
0x000E	0xD00D      	BRA         L_INTERRUPCAO_HIGH14
;Projeto_2.c,46 :: 		incrementUntil9(&displayNum);
0x0010	0x0E16      	MOVLW       _displayNum
0x0012	0x6E19      	MOVWF       FARG_incrementUntil9_n 
0x0014	0x0E00      	MOVLW       hi_addr(_displayNum)
0x0016	0x6E1A      	MOVWF       FARG_incrementUntil9_n+1 
0x0018	0xD80F      	RCALL       _incrementUntil9
;Projeto_2.c,47 :: 		out7Seg(displayNum);
0x001A	0xF019C016  	MOVFF       _displayNum, FARG_out7Seg_n
0x001E	0xD822      	RCALL       _out7Seg
;Projeto_2.c,49 :: 		TMR0H += TMR0H_preset;
0x0020	0x5017      	MOVF        _TMR0H_preset, 0 
0x0022	0x26D7      	ADDWF       TMR0H, 1 
;Projeto_2.c,50 :: 		TMR0L += TMR0L_preset;
0x0024	0x5018      	MOVF        _TMR0L_preset, 0 
0x0026	0x26D6      	ADDWF       TMR0L, 1 
;Projeto_2.c,51 :: 		INTCON.TMR0IF = 0;   //Não esquecer de zerar a Flag
0x0028	0x94F2      	BCF         INTCON, 2 
;Projeto_2.c,52 :: 		}
L_INTERRUPCAO_HIGH14:
;Projeto_2.c,53 :: 		}
L_end_INTERRUPCAO_HIGH:
L__INTERRUPCAO_HIGH20:
0x002A	0xF000C015  	MOVFF       21, R0
0x002E	0x0011      	RETFIE      1
; end of _INTERRUPCAO_HIGH
_configInterrupt:
;Projeto_2.c,55 :: 		void configInterrupt(){
;Projeto_2.c,58 :: 		INTCON.GIE = 1; // Alta prioridade   - usar somente SE RCON.IPEN =1;
0x0030	0x8EF2      	BSF         INTCON, 7 
;Projeto_2.c,60 :: 		RCON.IPEN = 1; //habilita níveis de prioridade - permite que uma interrupção
0x0032	0x8ED0      	BSF         RCON, 7 
;Projeto_2.c,64 :: 		INTCON.TMR0IE = 1;   //Habilita a interrupção individual do TIMER0
0x0034	0x8AF2      	BSF         INTCON, 5 
;Projeto_2.c,65 :: 		}
L_end_configInterrupt:
0x0036	0x0012      	RETURN      0
; end of _configInterrupt
_incrementUntil9:
;Projeto_2.c,6 :: 		void incrementUntil9(unsigned char *n){
;Projeto_2.c,8 :: 		(*n) += 1;
0x0038	0xFFE9C019  	MOVFF       FARG_incrementUntil9_n, FSR0L
0x003C	0xFFEAC01A  	MOVFF       FARG_incrementUntil9_n+1, FSR0H
0x0040	0xFFE1C019  	MOVFF       FARG_incrementUntil9_n, FSR1L
0x0044	0xFFE2C01A  	MOVFF       FARG_incrementUntil9_n+1, FSR1H
0x0048	0x2AE6      	INCF        POSTINC1, 1 
;Projeto_2.c,11 :: 		if(*n >= 10){
0x004A	0xFFE9C019  	MOVFF       FARG_incrementUntil9_n, FSR0L
0x004E	0xFFEAC01A  	MOVFF       FARG_incrementUntil9_n+1, FSR0H
0x0052	0x0E0A      	MOVLW       10
0x0054	0x5CEE      	SUBWF       POSTINC0, 0 
0x0056	0xE305      	BNC         L_incrementUntil90
;Projeto_2.c,12 :: 		(*n) = 0;
0x0058	0xFFE1C019  	MOVFF       FARG_incrementUntil9_n, FSR1L
0x005C	0xFFE2C01A  	MOVFF       FARG_incrementUntil9_n+1, FSR1H
0x0060	0x6AE6      	CLRF        POSTINC1 
;Projeto_2.c,13 :: 		}
L_incrementUntil90:
;Projeto_2.c,14 :: 		}
L_end_incrementUntil9:
0x0062	0x0012      	RETURN      0
; end of _incrementUntil9
_out7Seg:
;Projeto_2.c,16 :: 		void out7Seg(unsigned char n)
;Projeto_2.c,18 :: 		switch (n)
0x0064	0xD020      	BRA         L_out7Seg1
;Projeto_2.c,20 :: 		case 0:{ latd = 0b00111111; break;}   // 0 no display de 7seg.
L_out7Seg3:
0x0066	0x0E3F      	MOVLW       63
0x0068	0x6E8C      	MOVWF       LATD 
0x006A	0xD03C      	BRA         L_out7Seg2
;Projeto_2.c,21 :: 		case 1:{ latd = 0b00000110; break;}   // 1 no display de 7seg.
L_out7Seg4:
0x006C	0x0E06      	MOVLW       6
0x006E	0x6E8C      	MOVWF       LATD 
0x0070	0xD039      	BRA         L_out7Seg2
;Projeto_2.c,22 :: 		case 2:{ latd = 0b01011011; break;}   // 2 no display de 7seg.
L_out7Seg5:
0x0072	0x0E5B      	MOVLW       91
0x0074	0x6E8C      	MOVWF       LATD 
0x0076	0xD036      	BRA         L_out7Seg2
;Projeto_2.c,23 :: 		case 3:{ latd = 0b01001111; break;}   // 3 no display de 7seg.
L_out7Seg6:
0x0078	0x0E4F      	MOVLW       79
0x007A	0x6E8C      	MOVWF       LATD 
0x007C	0xD033      	BRA         L_out7Seg2
;Projeto_2.c,24 :: 		case 4:{ latd = 0b01100110; break;}   // 4 no display de 7seg.
L_out7Seg7:
0x007E	0x0E66      	MOVLW       102
0x0080	0x6E8C      	MOVWF       LATD 
0x0082	0xD030      	BRA         L_out7Seg2
;Projeto_2.c,25 :: 		case 5:{ latd = 0b01101101; break;}   // 5 no display de 7seg.
L_out7Seg8:
0x0084	0x0E6D      	MOVLW       109
0x0086	0x6E8C      	MOVWF       LATD 
0x0088	0xD02D      	BRA         L_out7Seg2
;Projeto_2.c,26 :: 		case 6:{ latd = 0b01111101; break;}   // 6 no display de 7seg.
L_out7Seg9:
0x008A	0x0E7D      	MOVLW       125
0x008C	0x6E8C      	MOVWF       LATD 
0x008E	0xD02A      	BRA         L_out7Seg2
;Projeto_2.c,27 :: 		case 7:{ latd = 0b00000111; break;}   // 7 no display de 7seg.
L_out7Seg10:
0x0090	0x0E07      	MOVLW       7
0x0092	0x6E8C      	MOVWF       LATD 
0x0094	0xD027      	BRA         L_out7Seg2
;Projeto_2.c,28 :: 		case 8:{ latd = 0b01111111; break;}   // 8 no display de 7seg.
L_out7Seg11:
0x0096	0x0E7F      	MOVLW       127
0x0098	0x6E8C      	MOVWF       LATD 
0x009A	0xD024      	BRA         L_out7Seg2
;Projeto_2.c,29 :: 		case 9:{ latd = 0b01101111; break;}   // 9 no display de 7seg.
L_out7Seg12:
0x009C	0x0E6F      	MOVLW       111
0x009E	0x6E8C      	MOVWF       LATD 
0x00A0	0xD021      	BRA         L_out7Seg2
;Projeto_2.c,30 :: 		default:{ latd = 0b00000000; ; break;} // entrada inválida, apagar display
L_out7Seg13:
0x00A2	0x6A8C      	CLRF        LATD 
0x00A4	0xD01F      	BRA         L_out7Seg2
;Projeto_2.c,31 :: 		}
L_out7Seg1:
0x00A6	0x5019      	MOVF        FARG_out7Seg_n, 0 
0x00A8	0x0A00      	XORLW       0
0x00AA	0xE0DD      	BZ          L_out7Seg3
0x00AC	0x5019      	MOVF        FARG_out7Seg_n, 0 
0x00AE	0x0A01      	XORLW       1
0x00B0	0xE0DD      	BZ          L_out7Seg4
0x00B2	0x5019      	MOVF        FARG_out7Seg_n, 0 
0x00B4	0x0A02      	XORLW       2
0x00B6	0xE0DD      	BZ          L_out7Seg5
0x00B8	0x5019      	MOVF        FARG_out7Seg_n, 0 
0x00BA	0x0A03      	XORLW       3
0x00BC	0xE0DD      	BZ          L_out7Seg6
0x00BE	0x5019      	MOVF        FARG_out7Seg_n, 0 
0x00C0	0x0A04      	XORLW       4
0x00C2	0xE0DD      	BZ          L_out7Seg7
0x00C4	0x5019      	MOVF        FARG_out7Seg_n, 0 
0x00C6	0x0A05      	XORLW       5
0x00C8	0xE0DD      	BZ          L_out7Seg8
0x00CA	0x5019      	MOVF        FARG_out7Seg_n, 0 
0x00CC	0x0A06      	XORLW       6
0x00CE	0xE0DD      	BZ          L_out7Seg9
0x00D0	0x5019      	MOVF        FARG_out7Seg_n, 0 
0x00D2	0x0A07      	XORLW       7
0x00D4	0xE0DD      	BZ          L_out7Seg10
0x00D6	0x5019      	MOVF        FARG_out7Seg_n, 0 
0x00D8	0x0A08      	XORLW       8
0x00DA	0xE0DD      	BZ          L_out7Seg11
0x00DC	0x5019      	MOVF        FARG_out7Seg_n, 0 
0x00DE	0x0A09      	XORLW       9
0x00E0	0xE0DD      	BZ          L_out7Seg12
0x00E2	0xD7DF      	BRA         L_out7Seg13
L_out7Seg2:
;Projeto_2.c,33 :: 		}
L_end_out7Seg:
0x00E4	0x0012      	RETURN      0
; end of _out7Seg
_configTimer:
;Projeto_2.c,76 :: 		void configTimer(){
;Projeto_2.c,78 :: 		T0CON.TMR0ON = 1;// Timer0 On/Off Control bit:1=Enables Timer0 / 0=Stops Timer0
0x00E6	0x8ED5      	BSF         T0CON, 7 
;Projeto_2.c,79 :: 		T0CON.T08BIT = 0;// Timer0 8-bit/16-bit Control bit: 1=8-bit timer/counter / 0=16-bit timer/counter
0x00E8	0x9CD5      	BCF         T0CON, 6 
;Projeto_2.c,80 :: 		T0CON.T0CS   = 0;// TMR0 Clock Source Select bit: 0=Internal Clock (CLKO) / 1=Transition on T0CKI pin
0x00EA	0x9AD5      	BCF         T0CON, 5 
;Projeto_2.c,81 :: 		T0CON.T0SE   = 0;// TMR0 Source Edge Select bit: 0=low/high / 1=high/low
0x00EC	0x98D5      	BCF         T0CON, 4 
;Projeto_2.c,82 :: 		T0CON.PSA    = 0;// Prescaler Assignment bit: 0=Prescaler is assigned; 1=NOT assigned/bypassed
0x00EE	0x96D5      	BCF         T0CON, 3 
;Projeto_2.c,83 :: 		T0CON.T0PS2  = 1;// bits 2-0  PS2:PS0: Prescaler Select bits
0x00F0	0x84D5      	BSF         T0CON, 2 
;Projeto_2.c,84 :: 		T0CON.T0PS1  = 0;
0x00F2	0x92D5      	BCF         T0CON, 1 
;Projeto_2.c,85 :: 		T0CON.T0PS0  = 0;
0x00F4	0x90D5      	BCF         T0CON, 0 
;Projeto_2.c,86 :: 		TMR0H = TMR0H_preset;    // preset for Timer0 MSB register
0x00F6	0xFFD7C017  	MOVFF       _TMR0H_preset, TMR0H
;Projeto_2.c,87 :: 		TMR0L = TMR0L_preset;    // preset for Timer0 LSB register
0x00FA	0xFFD6C018  	MOVFF       _TMR0L_preset, TMR0L
;Projeto_2.c,88 :: 		}
L_end_configTimer:
0x00FE	0x0012      	RETURN      0
; end of _configTimer
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0100	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0102	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0106	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0108	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x010A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x010C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x010E	0x0012      	RETURN      0
; end of ___CC2DW
_configMCU:
;Projeto_2.c,67 :: 		void configMCU()
;Projeto_2.c,70 :: 		ADCON1 |= 0x0F;
0x0110	0x0E0F      	MOVLW       15
0x0112	0x12C1      	IORWF       ADCON1, 1 
;Projeto_2.c,72 :: 		TRISD = 0;    // PORTD como saída  (usar LED)
0x0114	0x6A95      	CLRF        TRISD 
;Projeto_2.c,73 :: 		PORTD = 0;    // LED inicialmente OFF
0x0116	0x6A83      	CLRF        PORTD 
;Projeto_2.c,74 :: 		}
L_end_configMCU:
0x0118	0x0012      	RETURN      0
; end of _configMCU
_main:
0x011A	0x6A16      	CLRF        _displayNum 
0x011C	0x0E0B      	MOVLW       11
0x011E	0x6E17      	MOVWF       _TMR0H_preset 
0x0120	0x0EDC      	MOVLW       220
0x0122	0x6E18      	MOVWF       _TMR0L_preset 
;Projeto_2.c,90 :: 		void main() {
;Projeto_2.c,92 :: 		configMCU();
0x0124	0xDFF5      	RCALL       _configMCU
;Projeto_2.c,93 :: 		configTIMER();
0x0126	0xDFDF      	RCALL       _configTimer
;Projeto_2.c,94 :: 		configInterrupt();
0x0128	0xDF83      	RCALL       _configInterrupt
;Projeto_2.c,97 :: 		while(1);
L_main15:
0x012A	0xD7FF      	BRA         L_main15
;Projeto_2.c,98 :: 		}
L_end_main:
0x012C	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [40]    _INTERRUPCAO_HIGH
0x0030       [8]    _configInterrupt
0x0038      [44]    _incrementUntil9
0x0064     [130]    _out7Seg
0x00E6      [26]    _configTimer
0x0100      [16]    ___CC2DW
0x0110      [10]    _configMCU
0x011A      [20]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [1]    _displayNum
0x0017       [1]    _TMR0H_preset
0x0018       [1]    _TMR0L_preset
0x0019       [2]    FARG_incrementUntil9_n
0x0019       [1]    FARG_out7Seg_n
0x0F83       [1]    PORTD
0x0F8C       [1]    LATD
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD0       [1]    RCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
